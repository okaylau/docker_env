version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  memcached:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  crontab:
    driver: ${VOLUMES_DRIVER}

services:
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    restart: always
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${SSL_CERTIFICATES_PATH}:/etc/nginx/cert
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  php-fpm:
    build: 
      context: ./php-fpm
      args:
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
    restart: always
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./php-fpm/php7.4.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
      - "fd.kaylau.xyz:${DOCKER_HOST_IP}"
      - "api.fd.kaylau.xyz:${DOCKER_HOST_IP}"
      - "op.kaylau.xyz:${DOCKER_HOST_IP}"
      - "pc.kaylau.xyz:${DOCKER_HOST_IP}"
      - "hzf.kaylau.xyz:${DOCKER_HOST_IP}"
    depends_on:
      - mysql
      - redis
    networks:
      - backend

  php-worker:
    build:
      context: ./php-worker
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
    restart: always
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${PHPWORKER_SUPERVISORD_PATH}:/etc/supervisord.d
      - ${PHPWORKER_LOG_PATH}:/var/log/supervisor
      - ${CRONTAB_STORAGE}:/etc/crontabs
    depends_on:
      - mysql
      - redis
    networks:
      - backend

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${MYSQL_STORAGE}:/var/lib/mysql
      - ${MYSQL_LOG_PATH}:/var/log/mysql
    networks:
      - backend

  redis:
    build: ./redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_STORAGE}:/data
    networks:
      - backend

  workspace:
    build:
      context: ./workspace
      args:
        - NODE_VERSION=${NODE_VERSION}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
    restart: always
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    tty: true
    networks:
      - frontend
      - backend
